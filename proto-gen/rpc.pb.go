// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package libhuestacean

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetDeviceProvidersRequest struct {
	// optional: if set, only return the given providers
	LightProviderId      []uint32 `protobuf:"varint,1,rep,packed,name=light_provider_id,json=lightProviderId,proto3" json:"light_provider_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceProvidersRequest) Reset()         { *m = GetDeviceProvidersRequest{} }
func (m *GetDeviceProvidersRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceProvidersRequest) ProtoMessage()    {}
func (*GetDeviceProvidersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{0}
}
func (m *GetDeviceProvidersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceProvidersRequest.Unmarshal(m, b)
}
func (m *GetDeviceProvidersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceProvidersRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceProvidersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceProvidersRequest.Merge(dst, src)
}
func (m *GetDeviceProvidersRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceProvidersRequest.Size(m)
}
func (m *GetDeviceProvidersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceProvidersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceProvidersRequest proto.InternalMessageInfo

func (m *GetDeviceProvidersRequest) GetLightProviderId() []uint32 {
	if m != nil {
		return m.LightProviderId
	}
	return nil
}

type GetDeviceProvidersResponse struct {
	Providers            map[uint32]*DeviceProvider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetDeviceProvidersResponse) Reset()         { *m = GetDeviceProvidersResponse{} }
func (m *GetDeviceProvidersResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceProvidersResponse) ProtoMessage()    {}
func (*GetDeviceProvidersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{1}
}
func (m *GetDeviceProvidersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceProvidersResponse.Unmarshal(m, b)
}
func (m *GetDeviceProvidersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceProvidersResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceProvidersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceProvidersResponse.Merge(dst, src)
}
func (m *GetDeviceProvidersResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceProvidersResponse.Size(m)
}
func (m *GetDeviceProvidersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceProvidersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceProvidersResponse proto.InternalMessageInfo

func (m *GetDeviceProvidersResponse) GetProviders() map[uint32]*DeviceProvider {
	if m != nil {
		return m.Providers
	}
	return nil
}

type GetDevicesRequest struct {
	// optional: if set, only return *this* device
	DeviceId []uint32 `protobuf:"varint,1,rep,packed,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// optional: if set, only return devices for *this* provider
	LightProviderId      []uint32 `protobuf:"varint,2,rep,packed,name=light_provider_id,json=lightProviderId,proto3" json:"light_provider_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDevicesRequest) Reset()         { *m = GetDevicesRequest{} }
func (m *GetDevicesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDevicesRequest) ProtoMessage()    {}
func (*GetDevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{2}
}
func (m *GetDevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesRequest.Unmarshal(m, b)
}
func (m *GetDevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesRequest.Marshal(b, m, deterministic)
}
func (dst *GetDevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesRequest.Merge(dst, src)
}
func (m *GetDevicesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDevicesRequest.Size(m)
}
func (m *GetDevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesRequest proto.InternalMessageInfo

func (m *GetDevicesRequest) GetDeviceId() []uint32 {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *GetDevicesRequest) GetLightProviderId() []uint32 {
	if m != nil {
		return m.LightProviderId
	}
	return nil
}

type GetDevicesResponse struct {
	Devices              map[uint32]*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetDevicesResponse) Reset()         { *m = GetDevicesResponse{} }
func (m *GetDevicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDevicesResponse) ProtoMessage()    {}
func (*GetDevicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{3}
}
func (m *GetDevicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesResponse.Unmarshal(m, b)
}
func (m *GetDevicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesResponse.Marshal(b, m, deterministic)
}
func (dst *GetDevicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesResponse.Merge(dst, src)
}
func (m *GetDevicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetDevicesResponse.Size(m)
}
func (m *GetDevicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesResponse proto.InternalMessageInfo

func (m *GetDevicesResponse) GetDevices() map[uint32]*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type GetRoomsRequest struct {
	// optional: if set, only return *this* room
	RoomId               []uint32 `protobuf:"varint,1,rep,packed,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomsRequest) Reset()         { *m = GetRoomsRequest{} }
func (m *GetRoomsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRoomsRequest) ProtoMessage()    {}
func (*GetRoomsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{4}
}
func (m *GetRoomsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomsRequest.Unmarshal(m, b)
}
func (m *GetRoomsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomsRequest.Marshal(b, m, deterministic)
}
func (dst *GetRoomsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomsRequest.Merge(dst, src)
}
func (m *GetRoomsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRoomsRequest.Size(m)
}
func (m *GetRoomsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomsRequest proto.InternalMessageInfo

func (m *GetRoomsRequest) GetRoomId() []uint32 {
	if m != nil {
		return m.RoomId
	}
	return nil
}

type GetRoomsResponse struct {
	Rooms                map[uint32]*Room `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetRoomsResponse) Reset()         { *m = GetRoomsResponse{} }
func (m *GetRoomsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRoomsResponse) ProtoMessage()    {}
func (*GetRoomsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{5}
}
func (m *GetRoomsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomsResponse.Unmarshal(m, b)
}
func (m *GetRoomsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomsResponse.Marshal(b, m, deterministic)
}
func (dst *GetRoomsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomsResponse.Merge(dst, src)
}
func (m *GetRoomsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRoomsResponse.Size(m)
}
func (m *GetRoomsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomsResponse proto.InternalMessageInfo

func (m *GetRoomsResponse) GetRooms() map[uint32]*Room {
	if m != nil {
		return m.Rooms
	}
	return nil
}

type GetDeviceProviderArchetypesRequest struct {
	// optional: if set, only return *this* archetype
	ArchetypeId          []uint32 `protobuf:"varint,1,rep,packed,name=archetype_id,json=archetypeId,proto3" json:"archetype_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceProviderArchetypesRequest) Reset()         { *m = GetDeviceProviderArchetypesRequest{} }
func (m *GetDeviceProviderArchetypesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceProviderArchetypesRequest) ProtoMessage()    {}
func (*GetDeviceProviderArchetypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{6}
}
func (m *GetDeviceProviderArchetypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceProviderArchetypesRequest.Unmarshal(m, b)
}
func (m *GetDeviceProviderArchetypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceProviderArchetypesRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceProviderArchetypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceProviderArchetypesRequest.Merge(dst, src)
}
func (m *GetDeviceProviderArchetypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceProviderArchetypesRequest.Size(m)
}
func (m *GetDeviceProviderArchetypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceProviderArchetypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceProviderArchetypesRequest proto.InternalMessageInfo

func (m *GetDeviceProviderArchetypesRequest) GetArchetypeId() []uint32 {
	if m != nil {
		return m.ArchetypeId
	}
	return nil
}

type GetDeviceProviderArchetypesResponse struct {
	ProviderArchetypes   map[uint32]*DeviceProviderArchetype `protobuf:"bytes,1,rep,name=provider_archetypes,json=providerArchetypes,proto3" json:"provider_archetypes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GetDeviceProviderArchetypesResponse) Reset()         { *m = GetDeviceProviderArchetypesResponse{} }
func (m *GetDeviceProviderArchetypesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceProviderArchetypesResponse) ProtoMessage()    {}
func (*GetDeviceProviderArchetypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{7}
}
func (m *GetDeviceProviderArchetypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceProviderArchetypesResponse.Unmarshal(m, b)
}
func (m *GetDeviceProviderArchetypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceProviderArchetypesResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceProviderArchetypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceProviderArchetypesResponse.Merge(dst, src)
}
func (m *GetDeviceProviderArchetypesResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceProviderArchetypesResponse.Size(m)
}
func (m *GetDeviceProviderArchetypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceProviderArchetypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceProviderArchetypesResponse proto.InternalMessageInfo

func (m *GetDeviceProviderArchetypesResponse) GetProviderArchetypes() map[uint32]*DeviceProviderArchetype {
	if m != nil {
		return m.ProviderArchetypes
	}
	return nil
}

type GetDeviceArchetypesRequest struct {
	// optional: if set, only return *this* archetype
	ArchetypeId          []uint32 `protobuf:"varint,1,rep,packed,name=archetype_id,json=archetypeId,proto3" json:"archetype_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceArchetypesRequest) Reset()         { *m = GetDeviceArchetypesRequest{} }
func (m *GetDeviceArchetypesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceArchetypesRequest) ProtoMessage()    {}
func (*GetDeviceArchetypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{8}
}
func (m *GetDeviceArchetypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceArchetypesRequest.Unmarshal(m, b)
}
func (m *GetDeviceArchetypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceArchetypesRequest.Marshal(b, m, deterministic)
}
func (dst *GetDeviceArchetypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceArchetypesRequest.Merge(dst, src)
}
func (m *GetDeviceArchetypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceArchetypesRequest.Size(m)
}
func (m *GetDeviceArchetypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceArchetypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceArchetypesRequest proto.InternalMessageInfo

func (m *GetDeviceArchetypesRequest) GetArchetypeId() []uint32 {
	if m != nil {
		return m.ArchetypeId
	}
	return nil
}

type GetDeviceArchetypesResponse struct {
	DeviceArchetypes     map[uint32]*DeviceArchetype `protobuf:"bytes,1,rep,name=device_archetypes,json=deviceArchetypes,proto3" json:"device_archetypes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetDeviceArchetypesResponse) Reset()         { *m = GetDeviceArchetypesResponse{} }
func (m *GetDeviceArchetypesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceArchetypesResponse) ProtoMessage()    {}
func (*GetDeviceArchetypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_ce9a5f21b34d5e03, []int{9}
}
func (m *GetDeviceArchetypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceArchetypesResponse.Unmarshal(m, b)
}
func (m *GetDeviceArchetypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceArchetypesResponse.Marshal(b, m, deterministic)
}
func (dst *GetDeviceArchetypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceArchetypesResponse.Merge(dst, src)
}
func (m *GetDeviceArchetypesResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceArchetypesResponse.Size(m)
}
func (m *GetDeviceArchetypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceArchetypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceArchetypesResponse proto.InternalMessageInfo

func (m *GetDeviceArchetypesResponse) GetDeviceArchetypes() map[uint32]*DeviceArchetype {
	if m != nil {
		return m.DeviceArchetypes
	}
	return nil
}

func init() {
	proto.RegisterType((*GetDeviceProvidersRequest)(nil), "libhuestacean.GetDeviceProvidersRequest")
	proto.RegisterType((*GetDeviceProvidersResponse)(nil), "libhuestacean.GetDeviceProvidersResponse")
	proto.RegisterMapType((map[uint32]*DeviceProvider)(nil), "libhuestacean.GetDeviceProvidersResponse.ProvidersEntry")
	proto.RegisterType((*GetDevicesRequest)(nil), "libhuestacean.GetDevicesRequest")
	proto.RegisterType((*GetDevicesResponse)(nil), "libhuestacean.GetDevicesResponse")
	proto.RegisterMapType((map[uint32]*Device)(nil), "libhuestacean.GetDevicesResponse.DevicesEntry")
	proto.RegisterType((*GetRoomsRequest)(nil), "libhuestacean.GetRoomsRequest")
	proto.RegisterType((*GetRoomsResponse)(nil), "libhuestacean.GetRoomsResponse")
	proto.RegisterMapType((map[uint32]*Room)(nil), "libhuestacean.GetRoomsResponse.RoomsEntry")
	proto.RegisterType((*GetDeviceProviderArchetypesRequest)(nil), "libhuestacean.GetDeviceProviderArchetypesRequest")
	proto.RegisterType((*GetDeviceProviderArchetypesResponse)(nil), "libhuestacean.GetDeviceProviderArchetypesResponse")
	proto.RegisterMapType((map[uint32]*DeviceProviderArchetype)(nil), "libhuestacean.GetDeviceProviderArchetypesResponse.ProviderArchetypesEntry")
	proto.RegisterType((*GetDeviceArchetypesRequest)(nil), "libhuestacean.GetDeviceArchetypesRequest")
	proto.RegisterType((*GetDeviceArchetypesResponse)(nil), "libhuestacean.GetDeviceArchetypesResponse")
	proto.RegisterMapType((map[uint32]*DeviceArchetype)(nil), "libhuestacean.GetDeviceArchetypesResponse.DeviceArchetypesEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HuestaceanServerClient is the client API for HuestaceanServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HuestaceanServerClient interface {
	GetDeviceProviders(ctx context.Context, in *GetDeviceProvidersRequest, opts ...grpc.CallOption) (*GetDeviceProvidersResponse, error)
	GetDevices(ctx context.Context, in *GetDevicesRequest, opts ...grpc.CallOption) (*GetDevicesResponse, error)
	GetRooms(ctx context.Context, in *GetRoomsRequest, opts ...grpc.CallOption) (*GetRoomsResponse, error)
	GetDeviceProviderArchetypes(ctx context.Context, in *GetDeviceProviderArchetypesRequest, opts ...grpc.CallOption) (*GetDeviceProviderArchetypesResponse, error)
	GetDeviceArchetypes(ctx context.Context, in *GetDeviceArchetypesRequest, opts ...grpc.CallOption) (*GetDeviceArchetypesResponse, error)
}

type huestaceanServerClient struct {
	cc *grpc.ClientConn
}

func NewHuestaceanServerClient(cc *grpc.ClientConn) HuestaceanServerClient {
	return &huestaceanServerClient{cc}
}

func (c *huestaceanServerClient) GetDeviceProviders(ctx context.Context, in *GetDeviceProvidersRequest, opts ...grpc.CallOption) (*GetDeviceProvidersResponse, error) {
	out := new(GetDeviceProvidersResponse)
	err := c.cc.Invoke(ctx, "/libhuestacean.HuestaceanServer/GetDeviceProviders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *huestaceanServerClient) GetDevices(ctx context.Context, in *GetDevicesRequest, opts ...grpc.CallOption) (*GetDevicesResponse, error) {
	out := new(GetDevicesResponse)
	err := c.cc.Invoke(ctx, "/libhuestacean.HuestaceanServer/GetDevices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *huestaceanServerClient) GetRooms(ctx context.Context, in *GetRoomsRequest, opts ...grpc.CallOption) (*GetRoomsResponse, error) {
	out := new(GetRoomsResponse)
	err := c.cc.Invoke(ctx, "/libhuestacean.HuestaceanServer/GetRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *huestaceanServerClient) GetDeviceProviderArchetypes(ctx context.Context, in *GetDeviceProviderArchetypesRequest, opts ...grpc.CallOption) (*GetDeviceProviderArchetypesResponse, error) {
	out := new(GetDeviceProviderArchetypesResponse)
	err := c.cc.Invoke(ctx, "/libhuestacean.HuestaceanServer/GetDeviceProviderArchetypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *huestaceanServerClient) GetDeviceArchetypes(ctx context.Context, in *GetDeviceArchetypesRequest, opts ...grpc.CallOption) (*GetDeviceArchetypesResponse, error) {
	out := new(GetDeviceArchetypesResponse)
	err := c.cc.Invoke(ctx, "/libhuestacean.HuestaceanServer/GetDeviceArchetypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HuestaceanServerServer is the server API for HuestaceanServer service.
type HuestaceanServerServer interface {
	GetDeviceProviders(context.Context, *GetDeviceProvidersRequest) (*GetDeviceProvidersResponse, error)
	GetDevices(context.Context, *GetDevicesRequest) (*GetDevicesResponse, error)
	GetRooms(context.Context, *GetRoomsRequest) (*GetRoomsResponse, error)
	GetDeviceProviderArchetypes(context.Context, *GetDeviceProviderArchetypesRequest) (*GetDeviceProviderArchetypesResponse, error)
	GetDeviceArchetypes(context.Context, *GetDeviceArchetypesRequest) (*GetDeviceArchetypesResponse, error)
}

func RegisterHuestaceanServerServer(s *grpc.Server, srv HuestaceanServerServer) {
	s.RegisterService(&_HuestaceanServer_serviceDesc, srv)
}

func _HuestaceanServer_GetDeviceProviders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceProvidersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HuestaceanServerServer).GetDeviceProviders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libhuestacean.HuestaceanServer/GetDeviceProviders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HuestaceanServerServer).GetDeviceProviders(ctx, req.(*GetDeviceProvidersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HuestaceanServer_GetDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HuestaceanServerServer).GetDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libhuestacean.HuestaceanServer/GetDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HuestaceanServerServer).GetDevices(ctx, req.(*GetDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HuestaceanServer_GetRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HuestaceanServerServer).GetRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libhuestacean.HuestaceanServer/GetRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HuestaceanServerServer).GetRooms(ctx, req.(*GetRoomsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HuestaceanServer_GetDeviceProviderArchetypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceProviderArchetypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HuestaceanServerServer).GetDeviceProviderArchetypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libhuestacean.HuestaceanServer/GetDeviceProviderArchetypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HuestaceanServerServer).GetDeviceProviderArchetypes(ctx, req.(*GetDeviceProviderArchetypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HuestaceanServer_GetDeviceArchetypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceArchetypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HuestaceanServerServer).GetDeviceArchetypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libhuestacean.HuestaceanServer/GetDeviceArchetypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HuestaceanServerServer).GetDeviceArchetypes(ctx, req.(*GetDeviceArchetypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HuestaceanServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "libhuestacean.HuestaceanServer",
	HandlerType: (*HuestaceanServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDeviceProviders",
			Handler:    _HuestaceanServer_GetDeviceProviders_Handler,
		},
		{
			MethodName: "GetDevices",
			Handler:    _HuestaceanServer_GetDevices_Handler,
		},
		{
			MethodName: "GetRooms",
			Handler:    _HuestaceanServer_GetRooms_Handler,
		},
		{
			MethodName: "GetDeviceProviderArchetypes",
			Handler:    _HuestaceanServer_GetDeviceProviderArchetypes_Handler,
		},
		{
			MethodName: "GetDeviceArchetypes",
			Handler:    _HuestaceanServer_GetDeviceArchetypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_ce9a5f21b34d5e03) }

var fileDescriptor_rpc_ce9a5f21b34d5e03 = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xc7, 0x99, 0xae, 0xfb, 0xd1, 0xd3, 0xd6, 0x6d, 0xa7, 0x2c, 0x5b, 0x67, 0x71, 0xed, 0x46,
	0x90, 0xb6, 0x42, 0xc0, 0xae, 0x17, 0x8b, 0x08, 0xae, 0xa0, 0x74, 0xab, 0x08, 0x6e, 0x04, 0x6f,
	0x14, 0x96, 0x6e, 0x32, 0xd8, 0x60, 0xdb, 0xc4, 0x49, 0xb6, 0x50, 0xbc, 0xf5, 0x05, 0xf4, 0x15,
	0x7c, 0x02, 0x1f, 0xc5, 0x47, 0xf1, 0x0d, 0x24, 0x99, 0x64, 0x26, 0x69, 0x26, 0x6d, 0xba, 0x77,
	0xc9, 0xf9, 0xf8, 0x9f, 0x9c, 0x5f, 0xcf, 0x39, 0x85, 0x32, 0x73, 0x4d, 0xdd, 0x65, 0x8e, 0xef,
	0xe0, 0xda, 0xc4, 0xbe, 0x1e, 0xdf, 0x50, 0xcf, 0x1f, 0x99, 0x74, 0x34, 0x23, 0x55, 0x8b, 0xce,
	0x6d, 0x93, 0x72, 0x27, 0x01, 0xe6, 0x38, 0x53, 0xfe, 0xac, 0x0d, 0xe0, 0xde, 0x80, 0xfa, 0xaf,
	0x42, 0xf7, 0x7b, 0xe6, 0xcc, 0x6d, 0x8b, 0x32, 0xcf, 0xa0, 0xdf, 0x82, 0x5c, 0xdc, 0x83, 0xc6,
	0xc4, 0xfe, 0x32, 0xf6, 0xaf, 0xdc, 0xc8, 0x73, 0x65, 0x5b, 0x2d, 0xd4, 0xde, 0xea, 0xd4, 0x8c,
	0xfd, 0xd0, 0x11, 0x67, 0x0c, 0x2d, 0xed, 0x2f, 0x02, 0xa2, 0x52, 0xf2, 0x5c, 0x67, 0xe6, 0x51,
	0xfc, 0x11, 0xca, 0xb1, 0x88, 0x17, 0x4a, 0x54, 0xfa, 0x67, 0x7a, 0xea, 0x23, 0xf5, 0xfc, 0x6c,
	0x5d, 0x58, 0x5e, 0xcf, 0x7c, 0xb6, 0x30, 0xa4, 0x14, 0xf9, 0x04, 0x77, 0xd3, 0x4e, 0x5c, 0x87,
	0xad, 0xaf, 0x74, 0xd1, 0x42, 0x6d, 0xd4, 0xa9, 0x19, 0xc1, 0x23, 0x3e, 0x85, 0xed, 0xf9, 0x68,
	0x72, 0x43, 0x5b, 0xa5, 0x36, 0xea, 0x54, 0xfa, 0xf7, 0x97, 0xea, 0xa6, 0x8b, 0x1a, 0x3c, 0xf6,
	0x59, 0xe9, 0x0c, 0x69, 0x9f, 0xa1, 0x21, 0x3e, 0x4a, 0x40, 0x39, 0x82, 0x32, 0xa7, 0x29, 0x61,
	0xec, 0x71, 0xc3, 0xd0, 0x52, 0x13, 0x2b, 0xa9, 0x89, 0xfd, 0x41, 0x80, 0x93, 0xf2, 0x11, 0xa9,
	0x0b, 0xd8, 0xe5, 0x72, 0x31, 0x27, 0x3d, 0x8f, 0x93, 0xe4, 0x13, 0xbd, 0x73, 0x3a, 0x71, 0x3a,
	0xb9, 0x84, 0x6a, 0xd2, 0xa1, 0x20, 0xf3, 0x38, 0x4d, 0xe6, 0x40, 0x49, 0x26, 0x49, 0xa4, 0x07,
	0xfb, 0x03, 0xea, 0x1b, 0x8e, 0x33, 0x15, 0x3c, 0x0e, 0x61, 0x37, 0x98, 0x27, 0x49, 0x63, 0x27,
	0x78, 0x1d, 0x5a, 0xda, 0x6f, 0x04, 0x75, 0x19, 0x1c, 0x75, 0x77, 0x0e, 0xdb, 0x81, 0x3b, 0xee,
	0xad, 0x97, 0xed, 0x2d, 0x15, 0xaf, 0x87, 0x6f, 0xbc, 0x2f, 0x9e, 0x48, 0xde, 0x01, 0x48, 0xa3,
	0xa2, 0xa7, 0x6e, 0xba, 0xa7, 0xe6, 0x52, 0x85, 0x20, 0x37, 0xd9, 0xd1, 0x00, 0xb4, 0xcc, 0xe0,
	0xbd, 0x64, 0xe6, 0x98, 0xfa, 0x0b, 0x57, 0xfe, 0xe8, 0x27, 0x50, 0x1d, 0xc5, 0x46, 0xd9, 0x69,
	0x45, 0xd8, 0x86, 0x96, 0xf6, 0xb3, 0x04, 0x0f, 0x57, 0x2a, 0x45, 0x04, 0xbe, 0x43, 0x53, 0x0c,
	0x87, 0xc8, 0x8f, 0x79, 0xbc, 0x59, 0xb7, 0x13, 0x59, 0x41, 0x3d, 0xeb, 0xe2, 0xbc, 0xb0, 0x9b,
	0x71, 0x90, 0x29, 0x1c, 0xe6, 0x84, 0x2b, 0x48, 0x3e, 0x4f, 0x93, 0x7c, 0xb4, 0x72, 0x6f, 0x84,
	0x5c, 0x12, 0xee, 0x8b, 0xc4, 0x4d, 0xb8, 0x15, 0xd4, 0x7f, 0x08, 0x8e, 0x94, 0x0a, 0x11, 0xcc,
	0x29, 0x34, 0xa2, 0x65, 0xcc, 0xa0, 0x3c, 0xcf, 0x43, 0xa9, 0x40, 0xb8, 0xec, 0xe0, 0x00, 0xeb,
	0xd6, 0x92, 0x99, 0x98, 0x70, 0xa0, 0x0c, 0x55, 0xc0, 0x7b, 0x9a, 0x86, 0x77, 0xac, 0x84, 0xa7,
	0x82, 0xd6, 0xff, 0x75, 0x07, 0xea, 0x17, 0x22, 0xf2, 0x03, 0x65, 0x73, 0xca, 0xb0, 0x9d, 0xb8,
	0x15, 0xe2, 0xe0, 0xe1, 0x4e, 0x81, 0x13, 0x1a, 0xb2, 0x26, 0xdd, 0xc2, 0xc7, 0x16, 0x5f, 0x02,
	0xc8, 0x13, 0x83, 0xdb, 0x2b, 0xae, 0x0f, 0x97, 0x3e, 0x59, 0x7b, 0x9f, 0xf0, 0x5b, 0xd8, 0x8b,
	0x37, 0x1b, 0x1f, 0xe7, 0xae, 0x3c, 0x97, 0x7b, 0xb0, 0xe6, 0x24, 0xe0, 0x1f, 0xc9, 0x99, 0xc8,
	0x4e, 0x33, 0x7e, 0xb2, 0xc9, 0x0e, 0xf1, 0x9a, 0xfd, 0xcd, 0xd7, 0x0e, 0x4f, 0xa0, 0xa9, 0x18,
	0x29, 0xdc, 0x2d, 0x32, 0x76, 0xbc, 0x6a, 0xaf, 0xf8, 0x84, 0x5e, 0xef, 0x84, 0x7f, 0xd7, 0xa7,
	0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x30, 0x20, 0xa9, 0x32, 0xe4, 0x07, 0x00, 0x00,
}
